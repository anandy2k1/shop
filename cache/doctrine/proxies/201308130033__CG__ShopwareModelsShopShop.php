<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Shop;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Shop extends \Shopware\Models\Shop\Shop implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function setPosition($position)
    {
        $this->__load();
        return parent::setPosition($position);
    }

    public function getHost()
    {
        $this->__load();
        return parent::getHost();
    }

    public function setHost($host)
    {
        $this->__load();
        return parent::setHost($host);
    }

    public function getBasePath()
    {
        $this->__load();
        return parent::getBasePath();
    }

    public function setBasePath($basePath)
    {
        $this->__load();
        return parent::setBasePath($basePath);
    }

    public function getBaseUrl()
    {
        $this->__load();
        return parent::getBaseUrl();
    }

    public function setBaseUrl($baseUrl)
    {
        $this->__load();
        return parent::setBaseUrl($baseUrl);
    }

    public function getHosts()
    {
        $this->__load();
        return parent::getHosts();
    }

    public function setHosts($hosts)
    {
        $this->__load();
        return parent::setHosts($hosts);
    }

    public function getTemplate()
    {
        $this->__load();
        return parent::getTemplate();
    }

    public function setTemplate($template)
    {
        $this->__load();
        return parent::setTemplate($template);
    }

    public function getDocumentTemplate()
    {
        $this->__load();
        return parent::getDocumentTemplate();
    }

    public function setDocumentTemplate($documentTemplate)
    {
        $this->__load();
        return parent::setDocumentTemplate($documentTemplate);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }

    public function setCategory($category)
    {
        $this->__load();
        return parent::setCategory($category);
    }

    public function getLocale()
    {
        $this->__load();
        return parent::getLocale();
    }

    public function setLocale($locale)
    {
        $this->__load();
        return parent::setLocale($locale);
    }

    public function getCurrency()
    {
        $this->__load();
        return parent::getCurrency();
    }

    public function setCurrency($currency)
    {
        $this->__load();
        return parent::setCurrency($currency);
    }

    public function getCustomerGroup()
    {
        $this->__load();
        return parent::getCustomerGroup();
    }

    public function setCustomerGroup($customerGroup)
    {
        $this->__load();
        return parent::setCustomerGroup($customerGroup);
    }

    public function getDefault()
    {
        $this->__load();
        return parent::getDefault();
    }

    public function setDefault($default)
    {
        $this->__load();
        return parent::setDefault($default);
    }

    public function getCurrencies()
    {
        $this->__load();
        return parent::getCurrencies();
    }

    public function setCurrencies($currencies)
    {
        $this->__load();
        return parent::setCurrencies($currencies);
    }

    public function getMain()
    {
        $this->__load();
        return parent::getMain();
    }

    public function setMain($main)
    {
        $this->__load();
        return parent::setMain($main);
    }

    public function getSecure()
    {
        $this->__load();
        return parent::getSecure();
    }

    public function setSecure($secure)
    {
        $this->__load();
        return parent::setSecure($secure);
    }

    public function getSecureHost()
    {
        $this->__load();
        return parent::getSecureHost();
    }

    public function setSecureHost($secureHost)
    {
        $this->__load();
        return parent::setSecureHost($secureHost);
    }

    public function getSecureBasePath()
    {
        $this->__load();
        return parent::getSecureBasePath();
    }

    public function setSecureBasePath($secureBasePath)
    {
        $this->__load();
        return parent::setSecureBasePath($secureBasePath);
    }

    public function getSecureBaseUrl()
    {
        $this->__load();
        return parent::getSecureBaseUrl();
    }

    public function setSecureBaseUrl($secureBaseUrl)
    {
        $this->__load();
        return parent::setSecureBaseUrl($secureBaseUrl);
    }

    public function getFallback()
    {
        $this->__load();
        return parent::getFallback();
    }

    public function setFallback($fallback)
    {
        $this->__load();
        return parent::setFallback($fallback);
    }

    public function getCustomerScope()
    {
        $this->__load();
        return parent::getCustomerScope();
    }

    public function setCustomerScope($customerScope)
    {
        $this->__load();
        return parent::setCustomerScope($customerScope);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function setChildren($children)
    {
        $this->__load();
        return parent::setChildren($children);
    }

    public function getPages()
    {
        $this->__load();
        return parent::getPages();
    }

    public function setPages($pages)
    {
        $this->__load();
        return parent::setPages($pages);
    }

    public function get($name)
    {
        $this->__load();
        return parent::get($name);
    }

    public function registerResources(\Enlight_Bootstrap $bootstrap)
    {
        $this->__load();
        return parent::registerResources($bootstrap);
    }

    public function fromArray(array $array = array (
))
    {
        $this->__load();
        return parent::fromArray($array);
    }

    public function setOneToOne($data, $model, $property, $reference = NULL)
    {
        $this->__load();
        return parent::setOneToOne($data, $model, $property, $reference);
    }

    public function setOneToMany($data, $model, $property, $reference = NULL)
    {
        $this->__load();
        return parent::setOneToMany($data, $model, $property, $reference);
    }

    public function setManyToOne($data, $model, $property)
    {
        $this->__load();
        return parent::setManyToOne($data, $model, $property);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'mainId', 'name', 'title', 'position', 'host', 'basePath', 'baseUrl', 'hosts', 'secure', 'secureHost', 'secureBasePath', 'default', 'active', 'customerScope', 'main', 'template', 'documentTemplate', 'category', 'locale', 'currency', 'customerGroup', 'fallback', 'currencies', 'pages', 'children');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}